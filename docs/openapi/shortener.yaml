swagger: "2.0"
info:
  description: "This is a custom URL shortener. This system can be used to create custom urls to give your current url's meaning or to create bitly style url shortening functionality by default. Custom urls can also be namespaced and queried later for adding urls to a specific namespace"
  version: "1.0.0"
  title: "URL Shortener"
  termsOfService: "http://mycustom.domain.com/terms/"
  contact:
    email: "jwoods@mojavie.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "mycustom.domain.com"
basePath: "/v1"
tags:
- name: "namespace"
  description: "Namespace your custom Url"
  externalDocs:
    description: "Find out more"
    url: "http://mycustom.domain.com"
schemes:
- "https"
- "http"
paths:
  /namespaces:
    get:
      tags:
      - "namespace"
      summary: "Get list of all namespaces"
      description: ""
      operationId: "getNamespaces"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Namespace"
  /shorten:
    post:
      tags:
      - "shortener"
      summary: "create shorten url or use supplied custom url"
      description: ""
      operationId: "shortenUrl"
      consumes: 
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "url"
        in: "formData"
        description: "Url to be shortened"
        required: true
        type: "string"
      - name: "namespace"
        in: "formData"
        description: "Namespace to add custom url to"
        required: false
        type: "string"
      - name: "customUrl"
        in: "formData"
        description: "Customizable Url to reference supplied Url"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CustomUrl"
        403: 
          description: "Url not valid"
        409: 
          description: "The Custom url already exists"
  /{namespace}/{id}:
    get:
      tags:
      - "customUrl"
      summary: "Find url by namespaced id"
      description: "Returns a single url"
      operationId: "getUrlByIdAndNamespace"
      produces:
      - "application/json"
      parameters:
      - name: "namespace"
        in: "path"
        description: "namespace of url to return"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "ID of url to return"
        required: true
        type: "string"
      responses:
        301:
          description: "successful operation - redirected to Url"
          schema:
            $ref: "#/definitions/CustomUrl"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Url not found"
  /{id}:
    get:
      tags:
      - "customUrl"
      summary: "Find url by id"
      description: "Returns a single url"
      operationId: "getUrlById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of url to return"
        required: true
        type: "string"
      responses:
        301:
          description: "successful operation - redirected to Url"
          schema:
            $ref: "#/definitions/CustomUrl"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Url not found"
definitions:
  Namespace:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      namespace:
        type: "string"
    xml:
      name: "Category"
  CustomUrl:
    type: "object"
    required:
    - "url"
    properties:
      id:
        type: "integer"
        format: "int64"
      namespace:
        $ref: "#/definitions/Namespace"
      url:
        type: "string"
        example: "http://www.google.com"
      customUrl:
        type: "string"
        description: "optional custom url used to redirect to url"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"